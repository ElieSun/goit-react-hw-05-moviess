{"version":3,"file":"static/js/186.ac1261e2.chunk.js","mappings":"oMAkCA,UA9BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgDF,EAAAA,EAAAA,WAAS,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAAII,KAAKP,GACtBD,EAAQS,OAAS,GACnBN,GAAoB,EAEvB,GAAE,CAACC,EAAIJ,KAGN,0BACE,wBACGE,EACCF,EAAQU,KAAI,SAAAC,GAAM,OAChB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOP,GADA,KAOlB,uEAKT,C,mMC9BDU,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,uBAEf,CACIG,OAAQ,CACJC,QAASH,EACTI,KAAM,KANO,cACnBC,EADmB,yBAUlBA,EAAKC,KAAKC,SAVQ,2CAAH,qDAajBC,EAAe,mCAAI,WAAMC,GAAN,uFACTV,EAAAA,EAAAA,IAAA,8CACqBU,EADrB,+BAEnB,CACIP,OAAQ,CACJC,QAASH,EACTI,KAAM,KANc,cACtBC,EADsB,yBAUrBA,EAAKC,KAAKC,SAVW,2CAAJ,sDAafG,EAAe,mCAAI,WAAMrB,GAAN,uFACTU,EAAAA,EAAAA,IAAA,gBAAmBV,EAAnB,oBACnB,CACIa,OAAQ,CACJC,QAASH,KAJW,cACtBK,EADsB,yBAQrBA,EAAKC,MARgB,2CAAJ,sDAUfK,EAAY,mCAAG,WAAMtB,GAAN,uFACLU,EAAAA,EAAAA,IAAA,gBAAmBV,EAAnB,6BACnB,CACIa,OAAQ,CACJC,QAASH,KAJO,cAClBK,EADkB,yBAQjBA,EAAKC,KAAKM,MARO,2CAAH,sDAWZpB,EAAgB,mCAAG,WAAMH,GAAN,uFACXU,EAAAA,EAAAA,IAAA,gBAAmBV,EAAnB,6BAAkD,CACnEa,OAAQ,CACNC,QAASH,KAHiB,cACxBK,EADwB,yBAMvBA,EAAKC,KAAKC,SANa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/apiService.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'services/apiService';\n\nconst Reviews = () => {\n  const [reviews, setPeviews] = useState([]);\n  const [isReviewsLoading, setIsReviewsLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getMoviesReviews(id).then(setPeviews);\n    if (reviews.length > 0) {\n      setIsReviewsLoading(true);\n    }\n  }, [id, reviews]);\n\n  return (\n    <div>\n      <ul>\n        {isReviewsLoading ? (\n          reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '30f8890b4b18c3650777b7120811d941';\n                            \nexport const getTrendingMovies = async () =>  { \n        const resp = await axios.get(\n            `/trending/movie/day?`,\n            {\n                params: {\n                    api_key: API_KEY,\n                    page: 1,\n                },\n            }\n        );\n        return resp.data.results;\n}; \n\nexport const getMovieByQuery =  async query => {\n    const resp = await axios.get\n    (`/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`, \n    {\n        params: {\n            api_key: API_KEY,\n            page: 1,\n        },\n    }\n    );\n    return resp.data.results;\n};\n\nexport const getMovieDetails =  async id => {\n    const resp = await axios.get(`movie/${id}?&language=en-US`, \n    {\n        params: {\n            api_key: API_KEY,\n        },\n    }\n    );\n    return resp.data;\n};\nexport const getMovieCast = async id => {\n    const resp = await axios.get(`movie/${id}/credits?&language=en-US `, \n    {\n        params: {\n            api_key: API_KEY,\n        },\n    }\n    );\n    return resp.data.cast ;\n};\n\nexport const getMoviesReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};"],"names":["useState","reviews","setPeviews","isReviewsLoading","setIsReviewsLoading","id","useParams","useEffect","getMoviesReviews","then","length","map","review","author","content","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMovieByQuery","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}