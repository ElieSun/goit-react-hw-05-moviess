{"version":3,"file":"static/js/278.99237bb5.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["import { Grid } from \"react-loader-spinner\";\n\nexport const Loader = () => {\n    return (\n        <div className=\"LoaderSection\">\n            <Grid\n                height=\"80\"\n                width=\"80\"\n                color=\"#3f51b5\"\n                ariaLabel=\"grid-loading\"\n                radius=\"12.5\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n            />\n        </div>\n    );\n};","\n\nimport { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled'\n\nexport const TrendingList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 8px;\n`;\n\nexport const TrendingItem = styled.li`\n    display: block;\n`\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n  font-weight: 500;\n  &:hover,\n  &:focus {\n    color: #be7214;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 5px;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\nimport { BASE_IMG_URL } from 'services/constants';\nimport placeholder from '../../Img/placeholder.webp';\nimport { Img, Link, TrendingList,TrendingItem } from './MoviesList.styled';\n\nexport const MoviesList = ({movies} ) => { \n    const location = useLocation();\n    return (\n        <TrendingList>\n          {movies.map(({ id, title, poster_path, release_date }) => (\n            <TrendingItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img src={poster_path ? BASE_IMG_URL + poster_path : placeholder}\n                  alt={title} />\n                <p>{ title}({release_date.slice(0, 4)})</p>\n              </Link>\n            </TrendingItem>\n          ))}\n        </TrendingList>\n      );\n    };\n    \n    MoviesList.propTypes = {\n      movies: PropTypes.arrayOf(PropTypes.object.isRequired),\n    };\n","import { useState, useEffect  } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByQuery } from \"services/apiService\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { Loader } from \"components/Loader/Loader\";\n\nconst Movies = () => {\n    const [query, setQuery] = useState(' ');\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const searchQuery = searchParams.get('query');\n        if (!searchQuery){\n            return; \n        } \n\n        const fetchMoviesByQuery = async () => {\n            try {\n              const moviesByQuery = await getMovieByQuery(\n                searchQuery.trim().toLowerCase()\n              );\n              if (!moviesByQuery.length) {\n                throw new Error('Bad Query');\n              }\n              setMovies(moviesByQuery);\n            } catch (error) {\n              console.error(error);\n            } finally {\n              setIsLoading(false);\n              setQuery(searchQuery.trim().toLowerCase());\n            }\n          };\n\n          fetchMoviesByQuery();\n        }, [searchParams]);\n\n        // getMovieByQuery(searchQuery)\n        // .then(setMovies)\n        // .finally(() => {\n        //     setIsLoading(false);\n        //     setQuery(searchQuery);\n        // });\n    // },[searchParams ])\n\n    const  handleSubmit = evt => {\n        evt.preventDefault();  \n        setIsLoading(true);\n        setSearchParams({ query });\n    };\n\n    const handleChange = evt => {\n        setQuery(evt.target.value);\n    };\n\n    return (\n      <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} />\n    </div>\n    )\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '30f8890b4b18c3650777b7120811d941';\n                            \nexport const getTrendingMovies = async () =>  { \n        const resp = await axios.get(\n            `/trending/movie/day?`,\n            {\n                params: {\n                    api_key: API_KEY,\n                    page: 1,\n                },\n            }\n        );\n        return resp.data.results;\n}; \n\nexport const getMovieByQuery =  async query => {\n    const resp = await axios.get\n    (`/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`, \n    {\n        params: {\n            api_key: API_KEY,\n            page: 1,\n        },\n    }\n    );\n    return resp.data.results;\n};\n\nexport const getMovieDetails =  async id => {\n    const resp = await axios.get(`movie/${id}?&language=en-US`, \n    {\n        params: {\n            api_key: API_KEY,\n        },\n    }\n    );\n    return resp.data;\n};\nexport const getMovieCast = async id => {\n    const resp = await axios.get(`movie/${id}/credits?&language=en-US `, \n    {\n        params: {\n            api_key: API_KEY,\n        },\n    }\n    );\n    return resp.data.cast ;\n};\n\nexport const getMoviesReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';"],"names":["Loader","className","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","TrendingList","styled","TrendingItem","Link","NavLink","Img","MoviesList","movies","location","useLocation","map","id","title","poster_path","release_date","to","state","from","src","BASE_IMG_URL","placeholder","alt","slice","useState","query","setQuery","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","fetchMoviesByQuery","getMovieByQuery","trim","toLowerCase","moviesByQuery","length","Error","console","error","onSubmit","evt","preventDefault","type","name","value","onChange","target","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMovieDetails","getMovieCast","cast","getMoviesReviews"],"sourceRoot":""}