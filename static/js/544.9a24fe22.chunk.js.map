{"version":3,"file":"static/js/544.9a24fe22.chunk.js","mappings":"gPAKaA,EAAeC,EAAAA,EAAAA,GAAH,iGAMZC,EAAeD,EAAAA,EAAAA,GAAH,6CAIZE,GAAOF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,0IAUJI,EAAMJ,EAAAA,EAAAA,IAAH,iH,SCnBHK,EAAa,SAAC,GAAe,IAAdC,EAAa,EAAbA,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,SAACZ,EAAD,WACE,UAACC,EAAD,CAAMY,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACH,EAAD,CAAKa,IAAKL,EAAcM,EAAAA,EAAeN,EAAcO,EACnDC,IAAKT,KACP,yBAAKA,EAAL,IAAaE,EAAaQ,MAAM,EAAG,GAAnC,WAJeX,EADT,KAWjB,C,gHCMD,UAvBS,WACT,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KAcE,OAbFC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,mCAAG,8GAEUC,EAAAA,EAAAA,MAFV,OAEZC,EAFY,OAGlBJ,EAAUI,GAHQ,gDAKlBC,QAAQC,MAAR,MALkB,yDAAH,qDASnBJ,GACD,GAAE,KAGD,4BACE,2CACA,SAAC,IAAD,CAAYnB,OAAQA,MAGzB,C,mMCvBLwB,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAU,mCAEVL,EAAiB,mCAAG,oGACNI,EAAAA,EAAAA,IAAA,uBAEf,CACIE,OAAQ,CACJC,QAASF,EACTG,KAAM,KANO,cACnBC,EADmB,yBAUlBA,EAAKC,KAAKC,SAVQ,2CAAH,qDAajBC,EAAe,mCAAI,WAAMC,GAAN,uFACTT,EAAAA,EAAAA,IAAA,8CACqBS,EADrB,+BAEnB,CACIP,OAAQ,CACJC,QAASF,EACTG,KAAM,KANc,cACtBC,EADsB,yBAUrBA,EAAKC,KAAKC,SAVW,2CAAJ,sDAafG,EAAe,mCAAI,WAAM9B,GAAN,uFACToB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,oBACnB,CACIsB,OAAQ,CACJC,QAASF,KAJW,cACtBI,EADsB,yBAQrBA,EAAKC,MARgB,2CAAJ,sDAUfK,EAAY,mCAAG,WAAM/B,GAAN,uFACLoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,6BACnB,CACIsB,OAAQ,CACJC,QAASF,KAJO,cAClBI,EADkB,yBAQjBA,EAAKC,KAAKM,MARO,2CAAH,sDAWZC,EAAgB,mCAAG,WAAMjC,GAAN,uFACXoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,6BAAkD,CACnEsB,OAAQ,CACNC,QAASF,KAHiB,cACxBI,EADwB,yBAMvBA,EAAKC,KAAKC,SANa,2CAAH,qD,uDCrDtB,IAAMnB,EAAe,iC","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/apiService.js","services/constants.js"],"sourcesContent":["\n\nimport { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled'\n\nexport const TrendingList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 8px;\n`;\n\nexport const TrendingItem = styled.li`\n    display: block;\n`\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #000;\n  font-weight: 500;\n  &:hover,\n  &:focus {\n    color: #be7214;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 5px;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\nimport { BASE_IMG_URL } from 'services/constants';\nimport placeholder from '../../Img/placeholder.webp';\nimport { Img, Link, TrendingList,TrendingItem } from './MoviesList.styled';\n\nexport const MoviesList = ({movies} ) => { \n    const location = useLocation();\n    return (\n        <TrendingList>\n          {movies.map(({ id, title, poster_path, release_date }) => (\n            <TrendingItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img src={poster_path ? BASE_IMG_URL + poster_path : placeholder}\n                  alt={title} />\n                <p>{ title}({release_date.slice(0, 4)})</p>\n              </Link>\n            </TrendingItem>\n          ))}\n        </TrendingList>\n      );\n    };\n    \n    MoviesList.propTypes = {\n      movies: PropTypes.arrayOf(PropTypes.object.isRequired),\n    };\n","import { getTrendingMovies } from \"services/apiService\";\nimport { useEffect, useState } from \"react\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    useEffect(() => {\n        const fetchTrending = async () => {\n          try {\n            const trendngMovies = await getTrendingMovies();\n            setMovies(trendngMovies);\n          } catch (error) {\n            console.error(error);\n          }\n        };\n    \n        fetchTrending();\n      }, []);\n    \n      return (\n        <div>\n          <h1>Trening today</h1>\n          <MoviesList movies={movies} />\n        </div>\n      );\n    };\n    \n    export default Home;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY = '30f8890b4b18c3650777b7120811d941';\n                            \nexport const getTrendingMovies = async () =>  { \n        const resp = await axios.get(\n            `/trending/movie/day?`,\n            {\n                params: {\n                    api_key: API_KEY,\n                    page: 1,\n                },\n            }\n        );\n        return resp.data.results;\n}; \n\nexport const getMovieByQuery =  async query => {\n    const resp = await axios.get\n    (`/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`, \n    {\n        params: {\n            api_key: API_KEY,\n            page: 1,\n        },\n    }\n    );\n    return resp.data.results;\n};\n\nexport const getMovieDetails =  async id => {\n    const resp = await axios.get(`movie/${id}?&language=en-US`, \n    {\n        params: {\n            api_key: API_KEY,\n        },\n    }\n    );\n    return resp.data;\n};\nexport const getMovieCast = async id => {\n    const resp = await axios.get(`movie/${id}/credits?&language=en-US `, \n    {\n        params: {\n            api_key: API_KEY,\n        },\n    }\n    );\n    return resp.data.cast ;\n};\n\nexport const getMoviesReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';"],"names":["TrendingList","styled","TrendingItem","Link","NavLink","Img","MoviesList","movies","location","useLocation","map","id","title","poster_path","release_date","to","state","from","src","BASE_IMG_URL","placeholder","alt","slice","useState","setMovies","useEffect","fetchTrending","getTrendingMovies","trendngMovies","console","error","axios","API_KEY","params","api_key","page","resp","data","results","getMovieByQuery","query","getMovieDetails","getMovieCast","cast","getMoviesReviews"],"sourceRoot":""}